# Generated by Django 4.2 on 2025-02-12 07:29

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Charge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remaining', models.FloatField(blank=True, default=0, null=True)),
                ('package_type', models.CharField(default='', max_length=100)),
                ('accumulated_spend', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('music_long', models.IntegerField(default=0)),
                ('music_size', models.IntegerField(default=0)),
                ('gain_num', models.IntegerField(default=0)),
                ('is_down', models.BooleanField(default=False)),
                ('music_path', models.CharField(max_length=255)),
                ('music_url', models.CharField(max_length=255)),
                ('midi_path', models.CharField(max_length=255)),
                ('midi_url', models.CharField(max_length=255)),
                ('play_time', models.CharField(max_length=20)),
                ('save_position', models.CharField(max_length=50)),
                ('score', models.CharField(default=0, max_length=20)),
                ('is_read', models.BooleanField(db_index=True, default=False)),
                ('volume_set', models.IntegerField(default=0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='SessionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=255, unique=True)),
                ('file_info', models.TextField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TmpFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('generate_title', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=100)),
                ('music_long', models.IntegerField(default=0)),
                ('music_size', models.IntegerField(default=0)),
                ('generate_music_size', models.IntegerField(default=0)),
                ('music_source', models.CharField(default=0, max_length=100)),
                ('music_editing_scheme', models.CharField(default='', max_length=100)),
                ('music_file_path', models.CharField(default='', max_length=100)),
                ('generate_music_file_path', models.CharField(default='', max_length=100)),
                ('music_file_url', models.CharField(default='', max_length=100)),
                ('generate_music_file_url', models.CharField(default='', max_length=100)),
                ('midi_file_path', models.CharField(default='', max_length=100)),
                ('generate_midi_file_path', models.CharField(default='', max_length=100)),
                ('midi_file_url', models.CharField(default='', max_length=100)),
                ('generate_midi_file_url', models.CharField(default='', max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TempUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('music_collection', models.ManyToManyField(blank=True, related_name='temp_users', to='music_app.music')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('login_count', models.IntegerField(default=0)),
                ('last_online_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('charge_collection', models.ManyToManyField(blank=True, related_name='users', to='music_app.charge')),
                ('groups', models.ManyToManyField(blank=True, related_name='music_set', to='auth.group')),
                ('music_collection', models.ManyToManyField(blank=True, related_name='users', to='music_app.music')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='music_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserTmpMusic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('music_type', models.CharField(choices=[('NO_PROCESSED', 'No-processed'), ('ALGO_REMOVE_PROCESSED', 'Algo-remove-processed'), ('RECORDED', 'Recorded'), ('TEXT_BASED', 'Text-based'), ('RELEASE_BASED', 'Release-based'), ('ALGO_SPLITTER_PIANO', 'Algo_splitter_piano'), ('ALGO_SPLITTER_GUITAR', 'Algo_splitter_guitar'), ('ALGO_SPLITTER_BASS', 'Algo_splitter_bass'), ('ALGO_SPLITTER_DRUM', 'Algo_splitter_drum'), ('ALGO_SPLITTER_VOCAL', 'Algo_splitter_vocal')], default='NO_PROCESSED', max_length=25)),
                ('title', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=255)),
                ('music_long', models.IntegerField(default=0)),
                ('gain_num', models.IntegerField(default=0)),
                ('uploaded_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('content_type', 'object_id', 'music_type')},
            },
        ),
        migrations.AddIndex(
            model_name='tempuser',
            index=models.Index(fields=['created_at'], name='music_app_t_created_cb30b0_idx'),
        ),
        migrations.AddIndex(
            model_name='tempuser',
            index=models.Index(fields=['last_activity'], name='music_app_t_last_ac_2c9620_idx'),
        ),
    ]
